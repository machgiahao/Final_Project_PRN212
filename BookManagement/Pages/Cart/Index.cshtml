@page
@model BookManagement.Pages.Cart.IndexModel
@{
    var cartItems = Model.CartItems;
    ViewData["CurrentStep"] = 2;
}

<div class="container my-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-primary">Home</a></li>
            <li class="breadcrumb-item"><a href="/Cart/Index" class="text-decoration-none text-primary">Cart</a></li>
        </ol>
    </nav>
    <!-- Steps -->
    @await Html.PartialAsync("_CheckoutSteps")

    <div class="row">
        <!-- Cart Items -->
        <div class="col-md-8">
            <div class="card mb-3">
                <div class="card-body">
                    @if (cartItems.Count == 0)
                    {
                        <div class="text-center text-muted">Your cart is empty.</div>
                    }
                    else
                    {
                            @foreach (var item in cartItems)
                            {
                                <div class="row align-items-center mb-3 cart-item-row" data-cartitemid="@item.CartItemId" data-total="@item.Total">
                                    <div class="col-1 d-flex justify-content-center">
                                        <input type="checkbox" name="SelectedCartItemIds" value="@item.CartItemId" class="cart-checkbox" checked />
                                    </div>
                                    <div class="col-2">
                                        <img src="@item.BookImageUrl" class="img-fluid rounded" alt="@item.BookTitle" />
                                    </div>
                                    <div class="col-3">
                                        <span>@item.BookTitle</span>
                                    </div>
                                    <div class="col-2">
                                        <span>@item.Price.ToString("N0") đ</span>
                                    </div>
                                    <div class="col-2">
                                        <form method="post" asp-page-handler="UpdateQuantity" asp-route-cartItemId="@item.CartItemId" class="d-inline">
                                            <div class="quantity-control-custom">
                                                <button type="button" onclick="changeQuantity(this, -1, @item.Stock)">-</button>
                                                <input type="number" name="Quantity" value="@item.Quantity" min="1" max="@item.Stock" onchange="this.form.submit()" />
                                                <button type="button" onclick="changeQuantity(this, 1, @item.Stock)">+</button>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="col-2">
                                        <div class="d-flex align-items-center justify-content-end">
                                            <span class="text-danger fw-semibold me-3" style="white-space:nowrap;" data-itemtotal>@(item.Total.ToString("N0")) đ</span>
                                            <form method="post" asp-page-handler="RemoveItem" asp-route-cartItemId="@item.CartItemId" class="m-0">
                                                <button type="submit" class="btn btn-link text-danger p-0" title="Remove">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                    }
                </div>
            </div>
        </div>
        <!-- Cart Summary -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <span>Subtotal</span>
                        <span id="subtotalValue"></span>
                    </div>
                    <hr />
                    <div class="d-flex justify-content-between mb-3">
                        <strong>Total</strong>
                        <strong class="text-danger" id="totalValue"></strong>
                    </div>
                    <button type="button" class="btn btn-danger w-100" id="purchaseBtn" @(cartItems.Count == 0 ? "disabled" : "")>
                        Purchase (<span id="selectedCount"></span>)
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<form id="purchaseForm" method="post" asp-page="/Cart/Purchase" style="display:none">@Html.AntiForgeryToken()</form>
@section Scripts {
    <script>
        function changeQuantity(btn, delta, max) {
            var input = btn.parentElement.querySelector('input[type="number"]');
            var value = parseInt(input.value) || 1;
            var min = parseInt(input.min) || 1;
            max = parseInt(max) || 9999;
            value += delta;
            if (value < min) value = min;
            if (value > max) value = max;
            input.value = value;
            input.form.submit();
        }

        // Update subtotal/total when checkboxes change
        document.addEventListener('DOMContentLoaded', function () {
            function updateTotal() {
                let total = 0;
                let count = 0;
                document.querySelectorAll('.cart-checkbox').forEach(function (cb) {
                    if (cb.checked) {
                        const row = cb.closest('.cart-item-row');
                        total += parseInt(row.getAttribute('data-total'));
                        count++;
                    }
                });
                document.getElementById('subtotalValue').innerText = total.toLocaleString() + ' đ';
                document.getElementById('totalValue').innerText = total.toLocaleString() + ' đ';
                document.getElementById('selectedCount').innerText = count;
                document.getElementById('purchaseBtn').disabled = count === 0;
            }

            document.querySelectorAll('.cart-checkbox').forEach(function (cb) {
                cb.addEventListener('change', updateTotal);
            });

            updateTotal();
        });

       document.getElementById('purchaseBtn').addEventListener('click', function () {
            var form = document.getElementById('purchaseForm');
            // Xóa các input SelectedCartItemIds cũ, giữ lại token
            Array.from(form.querySelectorAll('input[name="SelectedCartItemIds"]')).forEach(function (el) {
                el.remove();
            });
            document.querySelectorAll('.cart-checkbox:checked').forEach(function (cb) {
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'SelectedCartItemIds';
                input.value = cb.value;
                form.appendChild(input);
            });
            form.submit();
        });

    </script>
}

<style>
    .quantity-control-custom {
        display: flex;
        align-items: center;
        border: 1px solid #dee2e6;
        border-radius: 10px;
        background: #fff;
        width: 140px;
        height: 44px;
        justify-content: center;
        overflow: hidden;
        box-shadow: 0 1px 2px rgba(0,0,0,0.02);
        gap: 0;
    }

        .quantity-control-custom button {
            width: 44px;
            height: 44px;
            border: none;
            background: none;
            font-size: 1.4rem;
            color: #444;
            transition: background 0.2s, color 0.2s;
            cursor: pointer;
            outline: none;
            border-radius: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            user-select: none;
        }

            .quantity-control-custom button:active,
            .quantity-control-custom button:focus {
                background: #f0f0f0;
                color: #007bff;
            }

        .quantity-control-custom input[type="number"] {
            width: 48px;
            height: 44px;
            border: none;
            text-align: center;
            font-size: 1.3rem;
            outline: none;
            background: transparent;
            appearance: textfield;
            margin: 0;
            padding: 0;
        }

            .quantity-control-custom input[type="number"]::-webkit-inner-spin-button,
            .quantity-control-custom input[type="number"]::-webkit-outer-spin-button {
                -webkit-appearance: none;
                margin: 0;
            }
</style>
